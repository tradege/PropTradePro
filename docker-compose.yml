version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: proptradepro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - proptradepro-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: proptradepro-backend
    environment:
      FLASK_ENV: development
      FLASK_APP: src.app:create_app
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      JWT_SECRET_KEY: dev-jwt-secret-key-change-in-production
      CORS_ORIGINS: ${CORS_ORIGINS:-https://marketedgepros.com,https://www.marketedgepros.com,http://localhost:3000}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - proptradepro-network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        flask db upgrade || echo 'No migrations to run' &&
        echo 'Starting application...' &&
        python src/app.py
      "

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: proptradepro-frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    networks:
      - proptradepro-network
    environment:
      - VITE_API_URL=http://localhost:5000

volumes:
  redis_data:

networks:
  proptradepro-network:
    driver: bridge

